{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx\";\nimport React from 'react'; // import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  valueInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 7\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      type: \"number\",\n      id: \"value-input\",\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  descriptionInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      type: \"text\",\n      id: \"description-input\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }));\n  } // currencyInput() {\n  //   const currencies = ['USD', 'CAD', 'EUR', 'GBP', 'ARS', 'BTC', 'LTC',\n  //     'JPY', 'CHF', 'AUD', 'CNY', 'ILS', 'ETH', 'XRP'];\n  //   return (\n  //     { currencies.map }\n  //   );\n  // }\n\n\n  async fetchCurrencies() {\n    const endpoint = 'https://economia.awesomeapi.com.br/json/all';\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    return object;\n  }\n\n  async currencyInput() {\n    const object = await this.fetchCurrencies();\n    return Object.keys(object).map(currency => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        \"data-testid\": currency,\n        value: currency,\n        key: currency,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, currency);\n    });\n  }\n\n  methodInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"method-input\",\n      id: \"method-input\",\n      name: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, this.valueInput(), this.descriptionInput(), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency-input\",\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }\n    }, this.currencyInput())), this.methodInput()));\n  }\n\n}\n\nexport default Header; // const mapStateToProps = (state) => ({\n// });\n// Form.propTypes = {\n// };","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx"],"names":["React","Header","Component","valueInput","descriptionInput","fetchCurrencies","endpoint","response","fetch","object","json","currencyInput","Object","keys","map","currency","methodInput","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACnCC,EAAAA,UAAU,GAAG;AACX,wBACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AACE,qBAAY,aADd;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,IAAI,EAAC,OAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAWD;;AAEDC,EAAAA,gBAAgB,GAAG;AACjB,wBACE;AAAO,MAAA,OAAO,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAEE;AACE,qBAAY,mBADd;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,EAAE,EAAC,mBAHL;AAIE,MAAA,IAAI,EAAC,aAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAWD,GA3BkC,CA6BnC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,eAAN,GAAwB;AACtB,UAAMC,QAAQ,GAAG,6CAAjB;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAD,CAA5B;AACA,UAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACA,WAAOD,MAAP;AACD;;AAED,QAAME,aAAN,GAAsB;AACpB,UAAMF,MAAM,GAAG,MAAM,KAAKJ,eAAL,EAArB;AACA,WACEO,MAAM,CAACC,IAAP,CAAYJ,MAAZ,EAAoBK,GAApB,CAAyBC,QAAD,IAAc;AACpC,0BACE;AACE,uBAAcA,QADhB;AAEE,QAAA,KAAK,EAAGA,QAFV;AAGE,QAAA,GAAG,EAAGA,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,QALH,CADF;AAQD,KATD,CADF;AAYD;;AAEDC,EAAAA,WAAW,GAAG;AACZ,wBACE;AAAO,MAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAEE;AAAO,qBAAY,cAAnB;AAAkC,MAAA,EAAE,EAAC,cAArC;AAAoD,MAAA,IAAI,EAAC,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKd,UAAL,EADJ,EAEI,KAAKC,gBAAL,EAFJ,eAGE;AAAO,MAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,qBAAY,gBAApB;AAAqC,MAAA,EAAE,EAAC,gBAAxC;AAAyD,MAAA,IAAI,EAAC,UAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,KAAKO,aAAL,EADJ,CADF,CAHF,EAQI,KAAKK,WAAL,EARJ,CADF,CADF;AAcD;;AApFkC;;AAuFrC,eAAef,MAAf,C,CACA;AAEA;AAEA;AAEA","sourcesContent":["import React from 'react';\n// import PropTypes from 'prop-types';\n// import { connect } from 'react-redux';\n\nclass Header extends React.Component {\n  valueInput() {\n    return (\n      <label htmlFor=\"value-input\">\n        Valor:\n        <input\n          data-testid=\"value-input\"\n          type=\"number\"\n          id=\"value-input\"\n          name=\"value\"\n        />\n      </label>\n    );\n  }\n\n  descriptionInput() {\n    return (\n      <label htmlFor=\"description-input\">\n        Descrição:\n        <input\n          data-testid=\"description-input\"\n          type=\"text\"\n          id=\"description-input\"\n          name=\"description\"\n        />\n      </label>\n    );\n  }\n\n  // currencyInput() {\n  //   const currencies = ['USD', 'CAD', 'EUR', 'GBP', 'ARS', 'BTC', 'LTC',\n  //     'JPY', 'CHF', 'AUD', 'CNY', 'ILS', 'ETH', 'XRP'];\n  //   return (\n  //     { currencies.map }\n  //   );\n  // }\n\n  async fetchCurrencies() {\n    const endpoint = 'https://economia.awesomeapi.com.br/json/all';\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    return object;\n  }\n\n  async currencyInput() {\n    const object = await this.fetchCurrencies();\n    return (\n      Object.keys(object).map((currency) => {\n        return (\n          <option\n            data-testid={ currency }\n            value={ currency }\n            key={ currency }\n          >\n            {currency}\n          </option>);\n      })\n    );\n  }\n\n  methodInput() {\n    return (\n      <label htmlFor=\"method-input\">\n        Valor:\n        <input data-testid=\"method-input\" id=\"method-input\" name=\"method\" />\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset>\n          { this.valueInput() }\n          { this.descriptionInput() }\n          <label htmlFor=\"currency-input\">\n            <select data-testid=\"currency-input\" id=\"currency-input\" name=\"currency\">\n              { this.currencyInput() }\n            </select>\n          </label>\n          { this.methodInput() }\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default Header;\n// const mapStateToProps = (state) => ({\n\n// });\n\n// Form.propTypes = {\n\n// };\n"]},"metadata":{},"sourceType":"module"}