{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/pages/Login.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { handleEmail } from '../actions';\nimport './Login.css';\nimport trybe from './trybe.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true\n    };\n  }\n\n  handleInputs({\n    name,\n    value\n  }) {\n    this.setState(state => ({ ...state,\n      [name]: value\n    }));\n    this.validations();\n  }\n\n  validations() {\n    const {\n      email,\n      password\n    } = this.state;\n    const emailValidation = /^[\\w.]+@[a-z]+\\.\\w{2,3}$/g;\n    const validEmail = emailValidation.test(email);\n    const passwordValidation = /[\\S]{5,}/;\n    const validPassword = passwordValidation.test(password);\n    this.setState(state => ({ ...state,\n      disabled: !validEmail || !validPassword\n    }));\n  }\n\n  render() {\n    const {\n      disabled,\n      email\n    } = this.state;\n    const {\n      emailDispatcher\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: trybeImage,\n      alt: \"trybe\",\n      width: \"200\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"Email:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email-input\",\n      type: \"email\",\n      name: \"email\",\n      required: true,\n      \"data-testid\": \"email-input\",\n      placeholder: \"Enter your email address\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Password:\", /*#__PURE__*/React.createElement(\"input\", {\n      id: \"password-input\",\n      type: \"password\",\n      name: \"password\",\n      required: true,\n      minLength: \"6\",\n      \"data-testid\": \"password-input\",\n      placeholder: \"Enter your password\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/carteira\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: disabled,\n      onClick: () => emailDispatcher(email),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, \"Entrar\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email\n});\n\nconst mapDispatchToProps = dispatch => ({\n  emailDispatcher: email => dispatch(handleEmail(email))\n});\n\nLogin.propTypes = {\n  emailDispatcher: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/pages/Login.jsx"],"names":["React","PropTypes","Link","connect","handleEmail","trybe","Login","Component","constructor","props","state","email","password","disabled","handleInputs","name","value","setState","validations","emailValidation","validEmail","test","passwordValidation","validPassword","render","emailDispatcher","trybeImage","target","mapStateToProps","user","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { handleEmail } from '../actions';\nimport './Login.css';\nimport trybe from './trybe.png';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      disabled: true,\n    };\n  }\n\n  handleInputs({ name, value }) {\n    this.setState((state) => ({\n      ...state,\n      [name]: value,\n    }));\n    this.validations();\n  }\n\n  validations() {\n    const { email, password } = this.state;\n    const emailValidation = /^[\\w.]+@[a-z]+\\.\\w{2,3}$/g;\n    const validEmail = emailValidation.test(email);\n    const passwordValidation = /[\\S]{5,}/;\n    const validPassword = passwordValidation.test(password);\n    this.setState((state) => ({\n      ...state,\n      disabled: !validEmail || !validPassword,\n    }));\n  }\n\n  render() {\n    const { disabled, email } = this.state;\n    const { emailDispatcher } = this.props;\n    return (\n      <main>\n        <form>\n          <fieldset>\n            <img src={ trybeImage } alt=\"trybe\" width=\"200\" />\n            <label htmlFor=\"email-input\">\n              Email:\n              <input\n                id=\"email-input\"\n                type=\"email\"\n                name=\"email\"\n                required\n                data-testid=\"email-input\"\n                placeholder=\"Enter your email address\"\n                onChange={ ({ target }) => this.handleInputs(target) }\n              />\n            </label>\n\n            <label htmlFor=\"password-input\">\n              Password:\n              <input\n                id=\"password-input\"\n                type=\"password\"\n                name=\"password\"\n                required\n                minLength=\"6\"\n                data-testid=\"password-input\"\n                placeholder=\"Enter your password\"\n                onChange={ ({ target }) => this.handleInputs(target) }\n              />\n            </label>\n\n            <Link to=\"/carteira\">\n              <button\n                type=\"button\"\n                disabled={ disabled }\n                onClick={ () => emailDispatcher(email) }\n              >\n                Entrar\n              </button>\n            </Link>\n          </fieldset>\n        </form>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  emailDispatcher: (email) => dispatch(handleEmail(email)),\n});\n\nLogin.propTypes = {\n  emailDispatcher: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}