{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies } from '../actions'; // import PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: ''\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchDispatch\n    } = this.props;\n    fetchDispatch();\n  }\n\n  handleInputs() {}\n\n  valueInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      type: \"number\",\n      id: \"value-input\",\n      name: \"value\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  descriptionInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      type: \"text\",\n      id: \"description-input\",\n      name: \"description\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  currenciesInput() {\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, \"Moedas:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency-input\",\n      name: \"currency\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": currency,\n      key: currency,\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, currency))));\n  }\n\n  methodInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"method-input\",\n      name: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")));\n  }\n\n  tagInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag-input\",\n      name: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, this.valueInput(), this.descriptionInput(), this.currenciesInput(), this.methodInput(), this.tagInput()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDispatch: () => dispatch(fetchCurrencies())\n}); // Form.propTypes = {\n// };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx"],"names":["React","connect","fetchCurrencies","Form","Component","constructor","props","state","value","description","currency","method","tag","componentDidMount","fetchDispatch","handleInputs","valueInput","target","descriptionInput","currenciesInput","currencies","map","methodInput","tagInput","render","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies } from '../actions';\n// import PropTypes from 'prop-types';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    };\n  }\n\n  componentDidMount() {\n    const { fetchDispatch } = this.props;\n    fetchDispatch();\n  }\n\n  handleInputs() {\n\n  }\n\n  valueInput() {\n    return (\n      <label htmlFor=\"value-input\">\n        Valor:\n        <input\n          data-testid=\"value-input\"\n          type=\"number\"\n          id=\"value-input\"\n          name=\"value\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n        />\n      </label>\n    );\n  }\n\n  descriptionInput() {\n    return (\n      <label htmlFor=\"description-input\">\n        Descrição:\n        <input\n          data-testid=\"description-input\"\n          type=\"text\"\n          id=\"description-input\"\n          name=\"description\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n        />\n      </label>\n    );\n  }\n\n  currenciesInput() {\n    const { currencies } = this.props;\n    return (\n      <label htmlFor=\"currency-input\">\n        Moedas:\n        <select\n          data-testid=\"currency-input\"\n          id=\"currency-input\"\n          name=\"currency\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n        >\n          {currencies.map((currency) => (\n            <option\n              data-testid={ currency }\n              key={ currency }\n              value={ currency }\n            >\n              { currency }\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n\n  methodInput() {\n    return (\n      <label htmlFor=\"method-input\">\n        Método de pagamento:\n        <select\n          data-testid=\"method-input\"\n          id=\"method-input\" name=\"method\">\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n\n  tagInput() {\n    return (\n      <label htmlFor=\"tag-input\">\n        Categoria:\n        <select data-testid=\"tag-input\" id=\"tag-input\" name=\"tag\">\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Transporte</option>\n          <option>Saúde</option>\n        </select>\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset>\n          { this.valueInput() }\n          { this.descriptionInput() }\n          { this.currenciesInput() }\n          { this.methodInput() }\n          { this.tagInput() }\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDispatch: () => dispatch(fetchCurrencies()),\n});\n\n// Form.propTypes = {\n\n// };\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}