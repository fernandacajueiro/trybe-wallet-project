{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies } from '../actions'; // import PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchDispatch\n    } = this.props;\n    fetchDispatch();\n  }\n\n  valueInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      type: \"number\",\n      id: \"value-input\",\n      name: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  descriptionInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      type: \"text\",\n      id: \"description-input\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  currenciesInput() {\n    const {\n      currencies\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, \"Moedas:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency-input\",\n      name: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, currencies.map(currency => /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": currency,\n      key: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, currency))));\n  }\n\n  methodInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"method-input\",\n      name: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")));\n  }\n\n  tagInput() {\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag-input\",\n      name: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, this.valueInput(), this.descriptionInput(), this.methodInput(), this.tagInput()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDispatch: () => dispatch(fetchCurrencies())\n}); // Form.propTypes = {\n// };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx"],"names":["React","connect","fetchCurrencies","Header","Component","constructor","props","state","currencies","componentDidMount","fetchDispatch","valueInput","descriptionInput","currenciesInput","map","currency","methodInput","tagInput","render","mapStateToProps","wallet","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCurrencies } from '../actions';\n// import PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currencies: [],\n    };\n  }\n\n  componentDidMount() {\n    const { fetchDispatch } = this.props;\n    fetchDispatch();\n  }\n\n  valueInput() {\n    return (\n      <label htmlFor=\"value-input\">\n        Valor:\n        <input\n          data-testid=\"value-input\"\n          type=\"number\"\n          id=\"value-input\"\n          name=\"value\"\n        />\n      </label>\n    );\n  }\n\n  descriptionInput() {\n    return (\n      <label htmlFor=\"description-input\">\n        Descrição:\n        <input\n          data-testid=\"description-input\"\n          type=\"text\"\n          id=\"description-input\"\n          name=\"description\"\n        />\n      </label>\n    );\n  }\n\n  currenciesInput() {\n    const { currencies } = this.props;\n    return (\n      <label htmlFor=\"currency-input\">\n        Moedas:\n        <select data-testid=\"currency-input\" id=\"currency-input\" name=\"currency\">\n          { currencies.map((currency) =>\n            <option\n              data-testid={currency}\n              key={currency}\n            >\n              {currency}\n            </option> ) }\n        </select>\n      </label>\n    );\n  }\n\n  methodInput() {\n    return (\n      <label htmlFor=\"method-input\">\n        Método de pagamento:\n        <select data-testid=\"method-input\" id=\"method-input\" name=\"method\">\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n\n  tagInput() {\n    return (\n      <label htmlFor=\"tag-input\">\n        Categoria:\n        <select data-testid=\"tag-input\" id=\"tag-input\" name=\"tag\">\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Transporte</option>\n          <option>Saúde</option>\n        </select>\n      </label>\n    );\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset>\n          { this.valueInput() }\n          { this.descriptionInput() }\n\n          { this.methodInput() }\n          { this.tagInput() }\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDispatch: () => dispatch(fetchCurrencies()),\n});\n\n// Form.propTypes = {\n\n// };\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}