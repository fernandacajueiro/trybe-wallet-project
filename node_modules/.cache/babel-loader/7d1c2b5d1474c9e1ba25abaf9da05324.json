{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrencies, handleInputs, handleTotal } from '../actions';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      fetchDispatch\n    } = this.props;\n    fetchDispatch();\n  }\n\n  componentDidUpdate() {}\n\n  editExpense() {\n    const {\n      editExpense\n    } = this.props;\n    this.setState({ ...editExpense\n    });\n  }\n\n  handleInputs({\n    name,\n    value\n  }) {\n    this.setState({\n      [name]: value\n    });\n  }\n\n  valueInput() {\n    const {\n      value\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      type: \"number\",\n      id: \"value-input\",\n      name: \"value\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  descriptionInput() {\n    const {\n      description\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      type: \"text\",\n      id: \"description-input\",\n      name: \"description\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      value: description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  currenciesInput() {\n    const {\n      currencies\n    } = this.props;\n    const {\n      currency\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, \"Moedas:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"currency-input\",\n      id: \"currency-input\",\n      name: \"currency\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      value: currency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, currencies.map(cu => /*#__PURE__*/React.createElement(\"option\", {\n      \"data-testid\": cu,\n      key: cu,\n      value: cu,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, cu))));\n  }\n\n  methodInput() {\n    const {\n      method\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, \"M\\xE9todo de pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      id: \"method-input\",\n      name: \"method\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      value: method,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\")));\n  }\n\n  tagInput() {\n    const {\n      tag\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, \"Categoria:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      id: \"tag-input\",\n      name: \"tag\",\n      onChange: ({\n        target\n      }) => this.handleInputs(target),\n      value: tag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, \"Sa\\xFAde\")));\n  }\n\n  buttonInput() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.buttonClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, \"Adicionar despesa\");\n  }\n\n  async fetchRates() {\n    const endpoint = 'https://economia.awesomeapi.com.br/json/all';\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    delete object.USDT;\n    return object;\n  }\n\n  async buttonClick() {\n    const {\n      value,\n      description,\n      currency,\n      method,\n      tag\n    } = this.state;\n    const {\n      stateDispatch,\n      expenses,\n      valueDispatch\n    } = this.props;\n    const rates = await this.fetchRates();\n    const obj = {\n      id: expenses.length,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: rates\n    };\n    stateDispatch(obj);\n    valueDispatch(parseFloat(value) * parseFloat(rates[currency].ask));\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, this.valueInput(), this.descriptionInput(), this.currenciesInput(), this.methodInput(), this.tagInput(), this.buttonInput()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  editExpense: state.editExpense\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchDispatch: () => dispatch(fetchCurrencies()),\n  stateDispatch: obj => dispatch(handleInputs(obj)),\n  valueDispatch: value => dispatch(handleTotal(value))\n});\n\nForm.propTypes = {\n  fetchDispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  valueDispatch: PropTypes.func.isRequired,\n  editExpense: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/Form.jsx"],"names":["React","connect","PropTypes","fetchCurrencies","handleInputs","handleTotal","Form","Component","constructor","props","state","value","description","currency","method","tag","buttonClick","bind","componentDidMount","fetchDispatch","componentDidUpdate","editExpense","setState","name","valueInput","target","descriptionInput","currenciesInput","currencies","map","cu","methodInput","tagInput","buttonInput","fetchRates","endpoint","response","fetch","object","json","USDT","stateDispatch","expenses","valueDispatch","rates","obj","id","length","exchangeRates","parseFloat","ask","render","mapStateToProps","wallet","mapDispatchToProps","dispatch","propTypes","func","isRequired","arrayOf","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrencies, handleInputs, handleTotal } from '../actions';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n    this.buttonClick = this.buttonClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchDispatch } = this.props;\n    fetchDispatch();\n  }\n\n  componentDidUpdate() {\n    \n  }\n\n  editExpense() {\n    const { editExpense } = this.props;\n    this.setState({\n      ...editExpense,\n    });\n  }\n\n  handleInputs({ name, value }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  valueInput() {\n    const { value } = this.state;\n    return (\n      <label htmlFor=\"value-input\">\n        Valor:\n        <input\n          data-testid=\"value-input\"\n          type=\"number\"\n          id=\"value-input\"\n          name=\"value\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n          value={ value }\n        />\n      </label>\n    );\n  }\n\n  descriptionInput() {\n    const { description } = this.state;\n    return (\n      <label htmlFor=\"description-input\">\n        Descrição:\n        <input\n          data-testid=\"description-input\"\n          type=\"text\"\n          id=\"description-input\"\n          name=\"description\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n          value={ description }\n        />\n      </label>\n    );\n  }\n\n  currenciesInput() {\n    const { currencies } = this.props;\n    const { currency } = this.state;\n    return (\n      <label htmlFor=\"currency-input\">\n        Moedas:\n        <select\n          data-testid=\"currency-input\"\n          id=\"currency-input\"\n          name=\"currency\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n          value={ currency }\n        >\n          {currencies.map((cu) => (\n            <option\n              data-testid={ cu }\n              key={ cu }\n              value={ cu }\n            >\n              { cu }\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n\n  methodInput() {\n    const { method } = this.state;\n    return (\n      <label htmlFor=\"method-input\">\n        Método de pagamento:\n        <select\n          data-testid=\"method-input\"\n          id=\"method-input\"\n          name=\"method\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n          value={ method }\n        >\n          <option>Dinheiro</option>\n          <option>Cartão de crédito</option>\n          <option>Cartão de débito</option>\n        </select>\n      </label>\n    );\n  }\n\n  tagInput() {\n    const { tag } = this.state;\n    return (\n      <label htmlFor=\"tag-input\">\n        Categoria:\n        <select\n          data-testid=\"tag-input\"\n          id=\"tag-input\"\n          name=\"tag\"\n          onChange={ ({ target }) => this.handleInputs(target) }\n          value={ tag }\n        >\n          <option>Alimentação</option>\n          <option>Lazer</option>\n          <option>Trabalho</option>\n          <option>Transporte</option>\n          <option>Saúde</option>\n        </select>\n      </label>\n    );\n  }\n\n  buttonInput() {\n    return (\n      <button type=\"button\" onClick={ this.buttonClick }>\n        Adicionar despesa\n      </button>\n    );\n  }\n\n  async fetchRates() {\n    const endpoint = 'https://economia.awesomeapi.com.br/json/all';\n    const response = await fetch(endpoint);\n    const object = await response.json();\n    delete object.USDT;\n    return object;\n  }\n\n  async buttonClick() {\n    const { value, description, currency, method, tag } = this.state;\n    const { stateDispatch, expenses, valueDispatch } = this.props;\n    const rates = await this.fetchRates();\n    const obj = {\n      id: expenses.length,\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: rates,\n    };\n    stateDispatch(obj);\n    valueDispatch(parseFloat(value) * parseFloat(rates[currency].ask));\n    this.setState({\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    });\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset>\n          { this.valueInput() }\n          { this.descriptionInput() }\n          { this.currenciesInput() }\n          { this.methodInput() }\n          { this.tagInput() }\n          { this.buttonInput() }\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  expenses: state.wallet.expenses,\n  editExpense: state.editExpense,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDispatch: () => dispatch(fetchCurrencies()),\n  stateDispatch: (obj) => dispatch(handleInputs(obj)),\n  valueDispatch: (value) => dispatch(handleTotal(value)),\n});\n\nForm.propTypes = {\n  fetchDispatch: PropTypes.func.isRequired,\n  currencies: PropTypes.arrayOf(PropTypes.string).isRequired,\n  stateDispatch: PropTypes.func.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  valueDispatch: PropTypes.func.isRequired,\n  editExpense: PropTypes.object.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}