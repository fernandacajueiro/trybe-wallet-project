{"ast":null,"code":"var _jsxFileName = \"/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/ExpensesTable.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { handleDelete, handleNewTotal, handleEdit } from '../actions';\n\nclass ExpensesTable extends React.Component {\n  tableInfo() {\n    const {\n      expenses,\n      editExpenseDispatcher\n    } = this.props;\n    return expenses.map(expense => /*#__PURE__*/React.createElement(\"tr\", {\n      key: expense.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }\n    }, expense.description), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }, expense.tag), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }\n    }, expense.method), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, expense.value), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, expense.exchangeRates[expense.currency].name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, parseFloat(expense.exchangeRates[expense.currency].ask).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, (parseFloat(expense.exchangeRates[expense.currency].ask) * expense.value).toFixed(2)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, \"Real\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"delete-btn\",\n      onClick: () => this.deleteExpense(expense.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Excluir\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"edit-btn\",\n      onClick: () => editExpenseDispatcher(expense),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"Editar\"))));\n  }\n\n  deleteExpense(id) {\n    const {\n      expenses,\n      newExpensesDispatcher,\n      newTotalDispatcher\n    } = this.props;\n    const newExpenses = expenses.filter(expense => expense.id !== id);\n    newExpensesDispatcher(newExpenses);\n    const newTotal = newExpenses.reduce((total, expense) => total + expense.value * parseFloat(expense.exchangeRates[expense.currency].ask), 0);\n    newTotalDispatcher(newTotal);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      width: \"100%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Descri\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"Tag\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"M\\xE9todo de pagamento\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, \"Valor\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, \"Moeda\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, \"C\\xE2mbio utilizado\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"Valor convertido\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Moeda de convers\\xE3o\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Editar/Excluir\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, this.tableInfo()));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  expenses: state.wallet.expenses\n});\n\nconst mapDispatchToProps = dispatch => ({\n  newExpensesDispatcher: expenses => dispatch(handleDelete(expenses)),\n  newTotalDispatcher: total => dispatch(handleNewTotal(total)),\n  editExpenseDispatcher: expense => dispatch(handleEdit(expense))\n});\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  newExpensesDispatcher: PropTypes.func.isRequired,\n  newTotalDispatcher: PropTypes.func.isRequired,\n  editExpenseDispatcher: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);","map":{"version":3,"sources":["/Users/fernanda/Documents/Projects/sd-09-project-trybewallet/src/components/ExpensesTable.jsx"],"names":["React","connect","PropTypes","handleDelete","handleNewTotal","handleEdit","ExpensesTable","Component","tableInfo","expenses","editExpenseDispatcher","props","map","expense","id","description","tag","method","value","exchangeRates","currency","name","parseFloat","ask","toFixed","deleteExpense","newExpensesDispatcher","newTotalDispatcher","newExpenses","filter","newTotal","reduce","total","render","mapStateToProps","state","wallet","mapDispatchToProps","dispatch","propTypes","arrayOf","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { handleDelete, handleNewTotal, handleEdit } from '../actions';\n\nclass ExpensesTable extends React.Component {\n  tableInfo() {\n    const { expenses, editExpenseDispatcher } = this.props;\n    return expenses.map((expense) => (\n      <tr key={ expense.id }>\n        <td>{expense.description}</td>\n        <td>{expense.tag}</td>\n        <td>{expense.method}</td>\n        <td>{expense.value}</td>\n        <td>{expense.exchangeRates[expense.currency].name}</td>\n        <td>{parseFloat(expense.exchangeRates[expense.currency].ask).toFixed(2)}</td>\n        <td>\n          {(parseFloat(expense.exchangeRates[expense.currency].ask) * expense.value)\n            .toFixed(2)}\n        </td>\n        <td>Real</td>\n        <td>\n          <button\n            type=\"button\"\n            data-testid=\"delete-btn\"\n            onClick={ () => this.deleteExpense(expense.id) }\n          >\n            Excluir\n          </button>\n          <button\n            type=\"button\"\n            data-testid=\"edit-btn\"\n            onClick={ () => editExpenseDispatcher(expense) }\n          >\n            Editar\n          </button>\n        </td>\n      </tr>));\n  }\n\n  deleteExpense(id) {\n    const { expenses, newExpensesDispatcher, newTotalDispatcher } = this.props;\n    const newExpenses = expenses.filter((expense) => expense.id !== id);\n    newExpensesDispatcher(newExpenses);\n    const newTotal = newExpenses\n      .reduce((total, expense) => total + (\n        expense.value * parseFloat(expense.exchangeRates[expense.currency].ask)), 0);\n    newTotalDispatcher(newTotal);\n  }\n\n  render() {\n    return (\n      <table width=\"100%\">\n        <thead>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n        </thead>\n        <tbody>\n          { this.tableInfo() }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  newExpensesDispatcher: (expenses) => dispatch(handleDelete(expenses)),\n  newTotalDispatcher: (total) => dispatch(handleNewTotal(total)),\n  editExpenseDispatcher: (expense) => dispatch(handleEdit(expense)),\n});\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  newExpensesDispatcher: PropTypes.func.isRequired,\n  newTotalDispatcher: PropTypes.func.isRequired,\n  editExpenseDispatcher: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n"]},"metadata":{},"sourceType":"module"}